{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactListItem/ContactListItem.module.css","Components/Filter/Filter.module.css","Components/ContactList/ContactList.module.css","App.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","Components/ContactForm/ContactForm.jsx","Components/ContactList/ContactListItem/ContactListItem.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","Components/Section/Section.jsx","App.js","index.js"],"names":["module","exports","addContact","createAction","payload","name","number","id","nanoid","deleteContact","changeFilter","items","createReducer","actions","state","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","devTools","process","persistor","persistStore","INITIAL_STATE","ContactForm","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","preventSimilar","alert","props","onAddContact","reset","newContactName","normalizedName","toLowerCase","find","includes","className","s","form","onSubmit","this","autoComplete","type","onChange","required","button","Component","connect","dispatch","data","ContactListItem","onDelete","contactItem","onClick","filteredList","normalizedQuery","onDeleteContact","map","onChangeFilter","eve","target","label","Section","title","children","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.348500d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__19qvh\",\"button\":\"ContactForm_button__1PR8D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactListItem_contactItem__TJEY9\",\"button\":\"ContactListItem_button__3t3gh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1O2yl\",\"label\":\"Filter_label__3KLYE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__1kyoH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3Soqi\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { nanoid } from 'nanoid';\r\n\r\nconst addContact = createAction('contacts/add', ({ name, number }) => {\r\n  return {\r\n    payload: {\r\n      name,\r\n      number,\r\n      id: nanoid(),\r\n    },\r\n  };\r\n});\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { addContact, deleteContact, changeFilter };\r\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\r\nimport actions from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [payload, ...state],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport s from 'Components/ContactForm/ContactForm.module.css';\r\n\r\nimport actions from '../../redux/contacts/contacts-actions';\r\n\r\nconst INITIAL_STATE = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  state = { name: '', number: '' };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (this.preventSimilar(this.state.name)) {\r\n      alert(`${this.state.name} is already in contacts^^`);\r\n    } else {\r\n      this.props.onAddContact(this.state);\r\n\r\n      this.reset();\r\n    }\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n  preventSimilar = newContactName => {\r\n    const { contacts } = this.props;\r\n    const normalizedName = newContactName.toLowerCase();\r\n\r\n    return contacts.find(({ name }) => name.toLowerCase().includes(normalizedName));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleSubmit} autoComplete=\"off\">\r\n        <h3>Did you already find a new friend?^^</h3>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n        </label>\r\n        <button className={s.button} type=\"submit\">\r\n          Add Contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst MapStateToProps = state => ({\r\n  contacts: state.contacts.items,\r\n});\r\n\r\nconst MapDispatchToProps = dispatch => ({\r\n  onAddContact: data => dispatch(actions.addContact(data)),\r\n});\r\n\r\nexport default connect(MapStateToProps, MapDispatchToProps)(ContactForm);\r\n","import PropTypes from 'prop-types';\r\nimport s from 'Components/ContactList/ContactListItem/ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ name, number, id, onDelete }) => {\r\n  return (\r\n    <li className={s.contactItem}>\r\n      {name}: {number}\r\n      <button className={s.button} type=\"button\" onClick={() => onDelete(id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import PropTypes from 'prop-types';\r\nimport ContactListItem from 'Components/ContactList/ContactListItem/ContactListItem';\r\nimport s from 'Components/ContactList/ContactList.module.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../redux/contacts/contacts-actions';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={s.contacts}>\r\n      {contacts.map(({ name, number, id }) => (\r\n        <ContactListItem\r\n          name={name}\r\n          number={number}\r\n          id={id}\r\n          onDelete={onDeleteContact}\r\n          key={id}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\n\r\nconst filteredList = (contacts, filter) => {\r\n  const normalizedQuery = filter.toLowerCase();\r\n\r\n  return contacts.filter(({ name }) => name.toLowerCase().includes(normalizedQuery));\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  contacts: filteredList(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(actions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport s from 'Components/Filter/Filter.module.css';\r\nimport actions from '../../redux/contacts/contacts-actions';\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.filter}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChangeFilter}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProp = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProp = dispatch => ({\r\n  onChangeFilter: eve => dispatch(actions.changeFilter(eve.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProp, mapDispatchToProp)(Filter);\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import ContactForm from 'Components/ContactForm/ContactForm';\r\nimport ContactList from 'Components/ContactList/ContactList';\r\nimport Filter from 'Components/Filter/Filter';\r\nimport Section from 'Components/Section/Section';\r\nimport s from './App.module.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className={s.App}>\r\n      <Section title=\"Phonebook\">\r\n        <ContactForm />\r\n      </Section>\r\n      <Section title=\"Contacts\">\r\n        <Filter />\r\n        <ContactList />\r\n      </Section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport store from './redux/store';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}